\item Astro Void se dedica a la compra de asteroides. Sea $p \in \mathbb{N}^n$ tal que $p_i$ es el precio de un asteroide el $i$-ésimo día en una secuencia de $n$ días. Astro Void quiere comprar y vender asteroides durante esos $n$ días de manera tal de obtener la mayor ganancia neta posible. Debido a las dificultades que existen en el transporte y almacenamiento de asteroides, Astro Void puede comprar a lo sumo un asteroide cada día, puede vender a lo sumo un asteroide cada día y comienza sin asteroides. Además, el Ente Regulador Asteroidal impide que Astro Void venda un asteroide que no haya comprado. Queremos encontrar la máxima ganancia neta que puede obtener Astro Void respetando las restricciones indicadas. Por ejemplo, si $p = (3, 2, 5, 6)$ el resultado es $6$ y si $p = (3,6,10)$ el resultado es $7$.  Notar que en una solución óptima, Astro Void debe terminar sin asteroides.
\begin{enumerate}[label=$\alph*)$,ref=$\alph*)$]
\item Convencerse de que la máxima ganancia neta (m.g.n.), si Astro Void tiene $c$ asteroides al fin del día $j$, es:
\begin{itemize}
 \item indefinido (i.e., $-\infty$) si $c < 0$ o $c > j$, o
 \item el máximo entre:
 \begin{itemize}
  \item la m.g.n. de finalizar el día $j-1$ con $c-1$ asteroides y comprar uno en el día $j$,
  \item la m.g.n. de finalizar el día $j-1$ con $c+1$ asteroides y vender uno en el día $j$,
  \item la m.g.n. de finalizar el día $j-1$ con $c$ asteroides y no operar el día $j$.
 \end{itemize}
\end{itemize}
\label{AstroFormRec}

\item Escribir matemáticamente la formulación recursiva enunciada en \ref{AstroFormRec}. Dar los valores de los casos base en función de la restricción de que comienza sin asteroides.
\item Indicar qué dato es la respuesta al problema con esa formulación recursiva.
\item Diseñar un algoritmo de PD \emph{top-down} que resuelva el problema y explicar su complejidad temporal y espacial auxiliar.
\item (Opcional) Diseñar un algoritmo de PD \emph{bottom-up}, reduciendo la complejidad espacial.
\item (Opcional) Formalmente, el problema consiste en determinar el máximo $g = \sum_{i=1}^n x_i p_i$ para un vector $x = (x_1, \ldots, x_n)$ tal que: $x_i \in \{-1,0,1\}$ para todo $1 \leq i \leq n$ y $\sum_{i=1}^j x_i \geq 0$ para todo $1 \leq j \leq n$.  Demostrar que la formulacion recursiva es correcta. \textbf{Ayuda}: primero demostrar que existe una solución óptima en la que Astro Void se queda sin asteroides en el día $n$.  Luego, demostrar por inducción que la función recursiva respeta la semántica, i.e., que computa la m.g.n.\ al final del día $j$ cuando Astro Void posee $c$ asteroides.
\end{enumerate}
